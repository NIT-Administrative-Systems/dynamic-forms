name: Deploy

on:
  push:
    branches: [ develop ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Extract branch name
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Setup PHP 🐘
      uses: shivammathur/setup-php@v2
      with:
          php-version: 8.0
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: xdebug

    - name: Setup NodeJS 😞
      uses: actions/setup-node@v2
      with:
        node-version: 12.x

    - uses: actions/cache@v2
      with:
        path: 'vendor'
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

    - uses: actions/cache@v2
      with:
        path: 'node_modules'
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies 🔧
      run: |
        composer install --no-interaction
        cp .env.ci .env
        php artisan key:generate
        yarn install

    - name: Build frontend 💅
      run: yarn run prod

    - name: PHPUnit 📝
      run: vendor/bin/phpunit --log-junit=.build/junit.xml

    - uses: docker://ghcr.io/enricomi/publish-unit-test-result-action:v1
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: .build/junit.xml

    - name: Deploy 🚀
      run: |
        vendor/bin/vapor env:push $BRANCH_NAME
        vendor/bin/vapor deploy --no-ansi ${BRANCH_NAME} --commit='${GITHUB_SHA}'
